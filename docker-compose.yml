services:
  traefik:
    image: traefik:3.1
    command: 
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entryPoints.websecure.http.encodequerysemicolons=true
      - --entrypoints.websecure.forwardedHeaders.insecure
      - --entrypoints.web.forwardedHeaders.insecure
      - --entryPoints.web.http.encodequerysemicolons=true
      # - --accesslog=true
    restart: always
    ports:
      - 80:80
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mediawiki:
    image: ghcr.io/coasterpedia/coasterpedia-web/mediawiki@${MEDIAWIKI_IMAGE}
    restart: always
    networks:
      - web
    volumes:
      - ./config/mediawiki/LocalSettings.php:/var/www/html/w/LocalSettings.php
      - ./config/nginx/coasterpedia.conf:/etc/nginx/http.d/coasterpedia.conf
    labels:
      - traefik.http.routers.mediawiki.rule=Host(`coasterpedia.net`)
      - traefik.http.routers.mediawiki.entrypoints=web,websecure
      - traefik.http.services.mediawiki.loadbalancer.server.port=80
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_SERVER: ${MYSQL_SERVER}
      MYSQL_USER: ${MYSQL_USER}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      SECRET_KEY: ${SECRET_KEY}
      ES_IP: ${ES_IP}
      OAUTH_PUBLIC: ${OAUTH_PUBLIC}
      OAUTH_PRIVATE: ${OAUTH_PRIVATE}
      CLOUDFLARE_ZONEID: ${CLOUDFLARE_ZONEID}
      CLOUDFLARE_APITOKEN: ${CLOUDFLARE_APITOKEN}
      TURNSTILE_SECRET: ${TURNSTILE_SECRET}
  redis:
    image: redis:alpine
    restart: unless-stopped
    init: true
    user: "${UID}:${GID}"
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - redis:/data
  jobrunner-chron:
    image: ghcr.io/coasterpedia/coasterpedia-web/jobrunner@${JOBRUNNER_IMAGE}
    restart: unless-stopped
    init: true
    user: "www-data:www-data"
    security_opt:
      - no-new-privileges:true
    depends_on:
      - mediawiki
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - web
    environment:
      RUNNER_TYPE: Chron
  matomo:
    image: ghcr.io/coasterpedia/coasterpedia-web/matomo@${MATOMO_IMAGE}
    restart: always
    networks:
      - web
    volumes:
      - ./config/nginx/matomo.conf:/etc/nginx/http.d/matomo.conf
    labels:
      - traefik.http.routers.matomo.rule=Host(`analytics.coasterpedia.net`)
      - traefik.http.routers.matomo.entrypoints=web,websecure
      - traefik.http.services.matomo.loadbalancer.server.port=80
    environment:
      MATOMO_DATABASE_DBNAME: ${MATOMO_DATABASE_DBNAME}
      MATOMO_DATABASE_PASSWORD: ${MATOMO_DATABASE_PASSWORD}
      MATOMO_DATABASE_HOST: ${MATOMO_DATABASE_HOST}
      MATOMO_DATABASE_USERNAME: ${MATOMO_DATABASE_USERNAME}
      MATOMO_EMAIL_HOST: ${SMTP_HOST}
      MATOMO_EMAIL_USERNAME: ${SMTP_USER}
      MATOMO_EMAIL_PASSWORD: ${SMTP_PASSWORD}
  ofelia:
    image: mcuadros/ofelia:latest
    restart: unless-stopped
    init: true
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    depends_on:
      - mediawiki
      - matomo
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/ofelia/ofelia.ini:/etc/ofelia/config.ini:ro
networks:
  web:
volumes:
  website:
  redis: